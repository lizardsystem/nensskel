[buildout]
index = http://packages.lizardsystem.nl
extends =
    http://packages.lizardsystem.nl/kgs/3.0/versions.cfg
    server.cfg
find-links =
unzip = true
prefer-final = true
versions = versions
extensions =
    mr.developer
    buildout-versions
parts =
    sysegg
    mkdir
    django
    omelette
    console_scripts
    pydev
    pyflakes
    \${buildout:serverparts}
develop = .
eggs =
    ${project}


[versions]
# Specific pins. We inherit lots of pins from the KGS, so if you add a
# development egg, you really need to un-pin it here.
${project} =

# Reported by buildout-versions


[sources]
# Examples:
# lizard-ui = git git@github.com:lizardsystem/nensskel.git
# lizard-ui = svn https://office.nelen-schuurmans.nl/svn/Products/djangoapps/lizard-ui/trunk


[sysegg]
# Add eggs here that are best handled through OS-level packages.
recipe = osc.recipe.sysegg
force-sysegg = true
eggs =
    psycopg2
    # matplotlib
    # PIL
    # pyproj


[mkdir]
recipe = z3c.recipe.mkdir
paths =
    \${buildout:directory}/var/static
    \${buildout:directory}/var/media
    \${buildout:directory}/var/log
    \${buildout:directory}/var/sqlite


[serverconfig]
# Configuration for setting up gunicorn, supervisor etc.
# For the gunicorn port, check on the server in the other sites as
# there should be no overlap. And simply give the supervisor port one
# number higher.
gunicorn-port = todo
supervisor-port = todo
sitename = todo
workers = 5


[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
wsgi = true
wsgilog = \${buildout:directory}/var/log/django.log
project = ${package}
projectegg = ${package}
settings = developmentsettings
test = ${package}
eggs = ${project}


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = \${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    \${buildout:eggs}
# Development tools
    coverage
    eazysvn
    pep8
    zest.releaser
    sitesetup
    fabric


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = \${buildout:directory}/doc/source
build = \${buildout:directory}/doc/build
eggs = \${buildout:eggs}

[pydev]
recipe = pb.recipes.pydev
eggs = \${buildout:eggs}
pydevproject_path = \${buildout:directory}/.pydevproject
extra_paths =

