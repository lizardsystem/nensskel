# Apache modules that need to be enabled:
# mod_wsgi (ubuntu: just install libapache2-mod-wsgi)

<VirtualHost *:80>
  ServerName ${project}.lizardsystem.nl
  ServerAlias test.${project}.lizardsystem.nl
  # ^^^ TODO: figure out real name

  WSGIProcessGroup ${project}
  WSGIDaemonProcess ${project} deadlock-timeout=15 display-name=${project}_wsgi user=buildout group=buildout
  # deadlock-timeout: kill off all threads after one of 'em hugged the GIL for
  # more than 15 seconds. Could help with the occasional
  # shapefile-problems. (Not totally sure about that, though).

  <Location />
    Order deny,allow
    Allow from all
  </Location>

  <Location /static_media/>
    # The css/javascript/image staticfiles are cached in the browser for an
    # hour.
    ExpiresActive On
    ExpiresDefault "access plus 1 hour"
    # Zip the css and javascript files on-the-fly.
    AddOutputFilterByType DEFLATE text/css application/javascript
  </Location>

  <Location /static_media/CACHE/>
    # Cache django-compressor's combined css/js into all eternity.
    ExpiresActive On
    ExpiresDefault "access plus 10 years"
    # And zip 'em on-the-fly.
    AddOutputFilterByType DEFLATE text/css application/javascript
  </Location>

  # Remove "LogLevel info" once wsgi and the rest of the site works well.
  LogLevel info
  CustomLog \${buildout:directory}/var/log/access.log combined
  ErrorLog \${buildout:directory}/var/log/error.log

  DocumentRoot \${buildout:directory}/var/static

  # Static files are hosted by apache itself.
  # TODO: favicon.ico and robots.txt
  # User-uploaded media: MEDIA_URL = '/media/'
  Alias /media/ \${buildout:directory}/var/media/
  # django-staticfiles: STATIC_URL = '/static_media/'
  Alias /static_media/ \${buildout:directory}/var/static/
  # Weird aliases for openlayers.
  AliasMatch .*/theme/default/(.*)$ \${buildout:directory}/var/static/openlayers/theme/default/$1
  AliasMatch .*/img/(.*)$ \${buildout:directory}/var/static/openlayers/img/$1

  # Django is run via WSGI.
  WSGIScriptAlias / \${buildout:directory}/bin/django.wsgi
  # Pre-load django whenever a new wsgi thread/process is started.
  # WSGIImportScript \${buildout:directory}/bin/django.wsgi process-group=${project} application-group=%{GLOBAL}

</VirtualHost>
