[buildout]
index = http://packages.lizardsystem.nl
extends =
    http://packages.lizardsystem.nl/kgs/latest.cfg
find-links =
unzip = true
prefer-final = true
socket-timeout = 1
show-picked-versions = true
extensions =
    mr.developer
parts =
    sysegg
    mkdir
    django
    omelette
    console_scripts
    sphinx
develop = .
eggs =
    ${project}


[versions]
# Specific pins. We inherit lots of pins from the KGS, so if you add a
# development egg, you really need to un-pin it here.
${project} =
zc.buildout = 2.0.0
zc.recipe.egg = 2.0.0a3

# Reported by buildout.


[sources]
# Examples:
# lizard-ui = git git@github.com:lizardsystem/lizard-ui.git


[sysegg]
recipe = osc.recipe.sysegg
force-sysegg = true
eggs =
    psycopg2
#    PIL
#    matplotlib
#    pyproj


[mkdir]
recipe = z3c.recipe.mkdir
paths =
    \${buildout:directory}/var/static
    \${buildout:directory}/var/media
    \${buildout:directory}/var/log
    \${buildout:directory}/var/sqlite


[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
project = ${package}
projectegg = ${package}
settings = testsettings
test = ${package}
eggs =
    ${project}
    ${project}[test]

[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = \${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
dependent-scripts = true
eggs =
    \${buildout:eggs}
# Development tools
    createcoverage
    pep8
    pyflakes
    zest.releaser


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = \${buildout:directory}/doc/source
build = \${buildout:directory}/doc/build
eggs = \${buildout:eggs}
