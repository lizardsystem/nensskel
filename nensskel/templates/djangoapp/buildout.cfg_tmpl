[buildout]
index = http://packages.lizardsystem.nl
extends =
    http://packages.lizardsystem.nl/kgs/1.23/versions.cfg
find-links =
unzip = true
prefer-final = true
versions = versions
extensions = buildout-versions
parts =
    sysegg
    mkdir
    django
    omelette
    console_scripts
    pyflakes
    sphinx
develop = .
#         local_checkouts/some_trunk_external
eggs =
    ${project}


[versions]
# Specific pins. We inherit lots of pins from the KGS, so if you add a
# development egg, you really need to un-pin it here.
${project} =

# Reported by buildout-versions


[sysegg]
recipe = osc.recipe.sysegg
force-sysegg = true
eggs =
    psycopg2
#    PIL
#    matplotlib
#    pyproj


[mkdir]
recipe = z3c.recipe.mkdir
paths =
    \${buildout:directory}/var/static
    \${buildout:directory}/var/media
    \${buildout:directory}/var/log
    \${buildout:directory}/var/sqlite


[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
project = ${package}
projectegg = ${package}
settings = testsettings
test = ${package}
eggs = ${project}


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = \${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    \${buildout:eggs}
# Development tools
    eazysvn
    createcoverage
    pep8
    zest.releaser


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = \${buildout:directory}/doc/source
build = \${buildout:directory}/doc/build
eggs = \${buildout:eggs}
